==============================================
Leccion 1 - Gestion basica de archivos
==============================================

Los diferentes tipos de archivos incluyen:
	Archivos regulares: almacenanan datos y programas
	Directorios: Que contienen otros archivos
	Archivos especiales: que utilizan para entrada y salida

claro que hay mas, pero para esta leccion usaremos estos

En la salida de ls -l el primer carcater significa:
-    para un archivo normal.
d    para un directorio.
c    para un archivo especial.

para mostrar la salida en una unidad entendible para humanos como bytes, gigas, etc, usaremos
-h

-a enumerar los archivos ocultos, estos empiezan con un .



CREAR, COPIAR MOVER Y ELIMINAR ARCHIVOS 
touch -crear un archivo(s) nuevo vacio
	touch file file1 file2 file3 

Puedes cambiar las marcas de tiempo de los archivos
-a cambia solamente la hora de acceso
-m solo cambia la hora de modificacion

puedes combinarlas para cambiar ambas cosas al mismo tiempo, tocuh -am file3

cp - usado para copiar archivos, su sintaxis es cp OPTIONS SOURCE DESTINATION
ejem:  cp /home/frank/Documents/file2 /home/frank/Documents/Backup

como opcion adicional puedes cambiar la marca de tiempo con la opcion -d, por ejemplo touch -d "yyyy-mm-dd 00:00" file

mv - mover archivos, al igual ue cp para copiar, se usa para mover y renombrar archivos, la sintaxis es mv FILENAME DESTINATION_DIRECTORY
ejem: mv myfile.txt /home/frank/Documents

-i pide confirmacion antes de hacer la accion
-f sobreescribira forzosamente el archvio sin pedir permiso

Eliminar archivos, su sintaxis es rm OPTIONS FILE
rm - usado para eliminar arhcvios (las acciones de este comando SON IRREVERSIBLES, SE RECOMIENDA USARLO CON PRECAUCION)
-i pide confirmacion antes de hacer la accion
-f sobreescribira forzosamente el archvio sin pedir permiso

Crear y eliminar directorios
mkdir - crea directorrios, la sintaxis de esto es mkdir OPTIONS DIRECTORY_NAME
	puedes crear varios directorios como: mkdir dir1 dir2 dir2
-p crear un directorio junto con sus subdirectorios, use la opcion -p "parents", ejem: mkdir -p parents/children

rmdir - borra un directorio si esta vacio, su sintaxis es rmdir OPTIONS DIRECTORY
	se pueden pasar multiples directorios (siempre y cuando esten vacios), ejem rmdir dir1 dir2 dir3
-p eliminaria un directorio con su subdirectorio, ejem: rmdir -p parents/children (tenga en cuenta que si alguno de los directorios no esta vacio, no se eliminaran)


Manipulacion recursiva de archivos y directorios 
en linux, las opciones de -r, -R o --recursive generalmente estas asociadas con la recursividad 

listado recursivo con ls -R - se usa para enumerar el contendio de un directorio junto con sus subdirectorio y archivos
ls -R mydir
para enumerar el conteido de un directorio, incluidos sus subdirectorios, use ls -R dir_name, puede agregar la opcion ls -lR dir_name, para visualizarlo mejor


copia recursiva con cp -r(o -R o --recursive) la sintaxis seria: cp -r SOURCE DESTINATION
cp -r permite copiar un directorio junto con todos sus subdirectorio y archivos, ejem: cp -r dir dirDestinatio


eliminacion recursiva con rm -r 
rm -r elimina un directorio y todo su contenido (subdirectorios y archivos)
cuidado con usar -rf, ya que forzara la aliminacion de todo
si no se usa la opcion -r, el sistema informaria un error

NOTA:Quizás se pregunte por qué no usamos rmdir en este caso. Hay una sutil diferencia entre los dos comandos. rmdir lograría eliminar solo si el directorio dado está vacío, mientras que rm -r puede usarse independientemente de si este directorio está vacío o no.

igual que los otros comandos de eliminacion, puedes usar la opcion -i de forma iterativa
-i pedir confirmacion antes de eliminar el archivo



Archivos Globbing y Wildcards
El globbing es una característica proporcionada por el shell de Unix/Linux para representar múltiples nombres 
de archivo mediante el uso de caracteres especiales llamados wildcards. Los wildcards son esencialmente símbolos 
que pueden usarse para sustituir uno o más caracteres. Permiten, por ejemplo, mostrar todos los archivos 
que comienzan con la letra A o todos los archivos que terminan con las letras .conf

estos son utiles, ya que se pueden usar en conjunto con los comandos cp, ls y rm
ejemplos:
Los siguientes son algunos ejemplos de globbing:
rm *    Elimina todos los archivos en el directorio de trabajo actual.
ls l? st    Lista todos los archivos con nombres que comienzan con l seguidos de cualquier caracter individual y terminan con st.
rmdir [a-z] *  Elimina todos los directorios cuyos nombres comienzan con una letra.


Tipos de wildcards
Se puedne usar 3 tipos de carcateres como:
* que representa cero, una o mas concurrencias de cualquier caracter
? que representa una sola aparicion de cualquier caracter
[] que representa cualquier aparicion de los carcateres encerrados entre corchetes, por ejemplo [0-9] coinciden con todos los digitos 


EL ASTERICSO (*)
coincide con cero, una o mas apariciones de cualquier carcater

ejemplos:
	$> find /home -name *.png
	$> ls lpic-*.txt
	$> cp -r animal/* forest
El asterisco, como cualquier otro wildcard, podria usarse repetitidamente en el mismo comando y el cualquier posicion 
ejem: rm *ate* 


EL SIGNO DE INTERROGACION (?)
coincide con una UNICA aparicion de un carcater

si consideramos que en un directorio tengan:
last.txt    lest.txt    list.txt    third.txt   past.txt

ejemplos:
$> ls l?st.txt
	last.txt    lest.txt    list.txt

$> ls ??st.txt
	last.txt    lest.txt    list.txt    past.txt

LOS CARCATERES ENTRE CORCHETES ([])
Los wildcard entre corchetes coinciden con cualquier aparicion de los carcateres entre corchetes

$> ls l[aef]st.txt
	last.txt    lest.txt

tambien se puede usar rango 

$> l[a-z]st.txt
	last.txt    lest.txt    list.txt

tambien se pueden aplicar varios rangos de corchetes, como:
$> ls
	student-1A.txt  student-2A.txt  student-3.txt
$> ls student-[0-9][A-Z].txt
	student-1A.text student-2A.txt


Podemos combinar wildcards 
$> ls
	last.txt    lest.txt    list.txt    third.txt   past.txt
$> ls [plf]?st* 
	last.txt    lest.txt    list.txt    past.txt



NOTA, SI QUERESMO MOSRAR ARCHIVOS QUE CONTENGAN RANGOS COMO DE 1 A 10 O DE 1 A 34, PODEMOS USAR LOS {}, EJEM: ls -l file{1.15}.txt


==============================================
Leccion 2 - Gestion basica de archivos
==============================================
find - comando para buscar y localizar archivos rapidamente, la sintaxis es find STARTING_PATH OPTIONS EXPRESSION ejem: find . -iname "myfile.txt"
	-name "name" para buscar estrictamente el nombre 
	-iname no define entre mayusculas y minusculas, cuando usemos globbing debemos de usar comillas "*.png" por ejemplo


uso de criterios para acelerar la busqueda
use find para localizar archivos basados en tipo, tamaño u hora, al especificar una o mas opciones, los resultados deseados e obtienen en menos tiempo
algunas especificaciones de archvios incluyen:
-type f    búsqueda de archivos.
-type d    búsqueda de directorio.
-type l    búsqueda de enlaces simbólicos.
ejem: $ find . -type d -name "example"

otros criterio
-name    realiza una búsqueda basada en el nombre dado.
-iname    búsquedas basadas en el nombre, sin embargo, las mayúsculas y minúsculas no son importantes (es decir, el caso de prueba myFile es similar a MYFILE).
-not    devuelve los resultados que no coinciden con el caso de prueba.
-maxdepth N    busca en el directorio actual así como en los subdirectorios N niveles de profundidad.

busqueda por hora de modificacion (INFORMACION SACADA DE LA LECCION 104.7)
-amin N, -cmin N, -mmin N    Esto coincidirá con los archivos a los que se ha accedido, se han cambiado los atributos o se han modificado (respectivamente) N minutos atrás.
-atime N, -ctime N, -mtime N    Esto coincidirá con los archivos a los que se accedió, se cambiaron los atributos o se modificaron N*24 horas atrás.
ejem: sudo find / -name "*.conf" -mtime 7

busqueda por tamaño
-size N podemos usar este comando para determinar el peso de un archivo, 
ejemplo:
-size 100c    archivos de exactamente 100 bytes.
-size +100k    archivos de más de 100 kilobytes.
-size -20M    archivos de menos de 20 megabytes.
-size +2G    archivos de más de 2 gigabytes

Para buscar arhcivos vacios, podemos usar find . -size 0c o find . -empty

Actuando sobre el conjunto de resultados
cuando el comando find logra buscar los resultado, podemos agregar una opcion mas para ejecutar sentencias en base al conjunto encontrado, lo podemos hacer con
-exec command {} \;
	{} remplaza automaticamente con el nombre del arhcivo que se esta procesando, osea remplaza los {} por la ruta de cada arhcvio encontrado
	\; indica el final de comando que se quiere ejecutar, debe de ser precedido de una \, para que el shell lo interprete literalmente como parte del comando y no como un separador de comandos

Usar grep para filtrar archivos basados en contenido 
grep se usa para buscar la aparicion de una palabra clave
	find . -type f -exec grep "lpi" '{}' \; -print
Esto buscaría cada objeto en la jerarquía de directorio actual (.) en archivos (-type f) y luego ejecuta el comando grep "lpi" para cada archivo que satisfaga las condiciones. Los archivos que coinciden con estas condiciones se imprimen en la pantalla (-print). Las llaves ({}) son un marcador de posición para los resultados de la búsqueda find. Los {} están encerrados entre comillas simples (') para evitar pasar archivos grep con nombres que contengan caracteres especiales. El comando -exec se termina con un punto y coma (;), que se debe escapar (\;) para evitar la interpretación por parte del shell

podemos sustituri -print por -delete, esto eliminaria todos los archvios que coinciden, ejemplo
find . -name  "*.bak" -delete, esto lo podemos sustituir por -exec rm {} \;, que seria lo mismo



Archivado de archivos
tar - se utiliza para crear archivos tar convirtiendo un grupo de archivos en un archivo, comando para comprimir/extraer, 
	su sintaxis es: tar [OPERATIONS_AND:OPTIONS] [ARCHIVE_NAME] [FILE_NAMES(S)]

OPERATIONS
solo se permite y rquiere un argumento de operaion. Las operaciones mas utilizadas son:
	--create (-c) crea un nuevo archivo tar
	--extract (-x) Extrae todo el archivo o uno o mas archivos de un archivo
	--list (-t) muestra una lista de los archivos incluidos en el archvio

OPTIONS
las opciones mas utilizadas son
	--verbose (-v) Muesyta los archivos que se estan procesando con el comando tar
	--file=archive-name (-f archive-name) Especifica el nombre del archvio de almacenamiento

ARCHIVE_NAME
	El nombre del archvio
FILE_NAME (S)
	Una lista de nombres de archivos separados por espacios que se extraeran. Si no se proporciona, se estrae todo el arhcivo

Crear un archivo




