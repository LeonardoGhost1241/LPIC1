=============================================================
Leccion 1 - 103.4 Usar flujos, tuberías y redireccionamientos
=============================================================
Los procesos estandar de linux tienen 3 canales de comunicacion abiertos de manera prdeterminada
	1.- Canal de entrada (stdin), el descriptor numerico es 0 
	2.- Canal de salida (stout), el descriptor numerico es 1
	3.- Canal de error estandar (stderr), el descriptor numerico es 2 

Los canales de comunicacion tambien son accesibles a travez de los dispositivos especiales 
	1.- /dev/stin
	2.- /dev/stdout
	3.- /dev/stderr



Redireccionamientos
La reasignacion del descriptor de archivo de un canal en el entorno de shell se denomina redirect, una redireccion
se define con un carcater especial dentro de la linea de comando, 
Por ejemplo, para redirigir la salida estandar de un proceso a un archivo, se usa el sombolo ">"

ejemplo: cat /proc/cpuinfo > /tmp/cpu.txt
(por defecto, solo se redirige el contenido que llega a stdout)
bash redirige la salida estandar por defecto, por lo tanto, usar > es equivalente a usar 1> (el valor del descriptor del archvio stdout es 1)

Para capturar stderr, se debe usar la redireccion 2> en su lugar. La mayoria de los programas de linea de comando envian informacion de depuracion y mensajes de error al canal de error estandar.
Es posible leer el mensaje de error provocado por leer un archivo inexistente:
cat /proc/cpu_info 2> /tmp/error.txt


NOTA: Tanto STOUT como STDERR se redirigen al mismo objetivo con &> o <& (es importante nunca dejar espacion, de lo contrario, estariamos dejando el comando en segundo plano)

Para descartar la salida de unc omando, su contendio se puede redirigir al archivo especial /dev/null. en este archivo se puede escribir por cualquier usuario, pero no se puede recuperar datos, ya que no se almacenan en ningun lado


La redireccion de salida sobreescribe TODO un archivo cuando usamos solamente ">", sin embargo, 
para desactivarlo, desactivaremos una opcion de set, en este caso sera noclobber de set, para ello, haremos: set +o noclobber o simplemente set -C,
para volverlo a activar usaremos set +o noclobber o set +C 

Incluso con la opcion activada, podemos seguir redirigiendo string a un archvio, esto se hace con el doble ">>", ejem: echo "string" >> file.txt, eso no lo reescribira, sino que agregara una cadena 

El simbolo <, se usa para redirigir el contenido de una rchvio al stdin de un proceso. El comando uniq, como la mayoría de las utilidades de línea de comandos para procesar texto, acepta los datos enviados a stdin por defecto: uniw -c < /tmp/error.txt





HERE DOCUMENTO Y HERE STRING
Otra dorma de redirigir, involucra los dos metodos anteriores.
La redireccion de documentos Here permite escribir texto de varias lineas que se utilizaran como contenido redirigido.
Dos simbolos menor que << indian una redireccion de Here document 

un ejemplo seria: 
cat << EOF > file
> string...
> hola
> etc...
>EOF

eso redirigira la salida al archivo file

El metodo Here String es muy similar al mentodo de Here Document, pero solopara una linea:
ejem: wc -c <<< "How many characters in this Here String?"
Deben de estar entre comillas, de lo contrario, solo la primera palabra se usara como la cadena Here y las restantes se pasaran como argumentos al comando
















=============================================================
Leccion 2 - 103.4 Usar flujos, tuberías y redireccionamientos
=============================================================
